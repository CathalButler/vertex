openapi: 3.0.0
info:
  title: Norton API
  description: Backend API server for Vertex's Norton backend
  version: "0.1"
servers:
- url: https://localhost/api/v1
  description: Localhost API URL
tags:
- name: User
  description: Operations available for user accounts
- name: Channel
  description: Operation available for channels
- name: Server
  description: Operation available for server info
- name: Auth
  description: Operation available for access to applcation
paths:
  /users:
    post:
      tags:
      - User
      summary: User has been created
      description: User has been created
      operationId: add_user
      requestBody:
        description: User to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "201":
          description: User has been created
          headers:
            Location:
              style: simple
              explode: false
              schema:
                type: string
                format: uri
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /users/{id}:
    get:
      tags:
      - User
      summary: Returns a single User if it exists
      description: Returns a single User if it exists
      operationId: get_user_by_id
      parameters:
      - name: id
        in: path
        description: The User ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: The user has been found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "404":
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: swagger_server.controllers.user_controller
    put:
      tags:
      - User
      summary: Updates an existing User
      description: Updates an existing User
      operationId: update_user_by_id
      parameters:
      - name: id
        in: path
        description: The User ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        description: User entity to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "204":
          description: User sucessfully updated
        "404":
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: swagger_server.controllers.user_controller
    delete:
      tags:
      - User
      summary: Deletes an existing User
      description: Deletes a user from the database
      operationId: delete_user_by_id
      parameters:
      - name: id
        in: path
        description: The User ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "204":
          description: User has been deleted
        "404":
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /channels:
    post:
      tags:
      - Channel
      summary: Channel has been created
      description: Channel has been created
      operationId: add_channel
      requestBody:
        description: The Channel to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
      responses:
        "201":
          description: Channel has been created
          headers:
            Location:
              style: simple
              explode: false
              schema:
                type: string
                format: uri
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: swagger_server.controllers.channel_controller
  /channels/{id}:
    get:
      tags:
      - Channel
      summary: Get a channel by its ID
      description: Returns a single Channel if it exists
      operationId: get_channel_by_id
      parameters:
      - name: id
        in: path
        description: The channel ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: The channel has been found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
        "404":
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: swagger_server.controllers.channel_controller
    put:
      tags:
      - Channel
      summary: Updates an existing channel
      description: Updates an existing channel
      operationId: update_channel_by_id
      parameters:
      - name: id
        in: path
        description: The channel ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        description: Channel to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
      responses:
        "204":
          description: Channel sucessfully updated
        "404":
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: swagger_server.controllers.channel_controller
    delete:
      tags:
      - Channel
      summary: Deletes an existing channel
      description: Deletes an existing channel
      operationId: delete_channel_by_id
      parameters:
      - name: id
        in: path
        description: The channel ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "204":
          description: Channel has been deleted
        "404":
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: swagger_server.controllers.channel_controller
  /server:
    get:
      tags:
      - Server
      summary: Returns information about the server
      description: |
        Returns information about the server like the version its on and
        amount of users on the server
      operationId: search_server
      responses:
        "200":
          description: returns the information about the server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: swagger_server.controllers.server_controller
  /login:
    post:
      tags:
      - Auth
      summary: Allows a user that is registered to login
      description: Allows a user that is register to login to the applcation
      operationId: login
      requestBody:
        description: User to be authenticated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        "200":
          description: user is authenticated on the server
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: swagger_server.controllers.auth_controller
  /register:
    post:
      tags:
      - Auth
      summary: Allows a user register a new account
      description: Allow a user register a new account with the server
      operationId: register
      requestBody:
        description: User to be registered
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "201":
          description: user was registered successfully
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: swagger_server.controllers.auth_controller
components:
  schemas:
    Error:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: string
        message:
          type: string
    User:
      required:
      - displayName
      - id
      - password
      - username
      type: object
      properties:
        id:
          type: number
          format: int
          example: 1
        username:
          type: string
          example: JohnD2005
        password:
          type: string
          description: In the case of user creation the password field will be the
            plaintext password in all other instances where the server returns a User
            object it will be a combination of the hash of the users password and
            associated salt
          example: Monkey123
        displayName:
          type: string
          example: John Doe
      example:
        password: Monkey123
        displayName: John Doe
        id: 1
        username: JohnD2005
    Channel:
      required:
      - capacity
      - id
      - name
      - position
      - type
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: General
        capacity:
          type: integer
          example: 20
        type:
          type: string
          description: Type determines what whether the channel is voice, text, or
            some specialised char e.g. direct                message N.B. This will
            be updated in future once the appropiate ENUM values have been finalised.
          example: TEXT_CHANNEL
        position:
          type: integer
          example: 3
      example:
        name: General
        id: 1
        position: 3
        type: TEXT_CHANNEL
        capacity: 20
    Server:
      type: object
      properties:
        userCount:
          type: integer
          example: 100
        appVersion:
          type: string
          example: Norton 1.0.0
      example:
        appVersion: Norton 1.0.0
        userCount: 100
    Login:
      type: object
      properties:
        password:
          type: string
        userName:
          type: string
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unexpected:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

